
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004b2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000506  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000002f  00000000  00000000  00000526  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000259  00000000  00000000  00000555  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000012a  00000000  00000000  000007ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001b9  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000a94  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ed  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000150  00000000  00000000  00000bb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00000d01  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  64:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <degree_to_pulse>:

#include <util/delay.h>



int degree_to_pulse(int angle){
  6c:	aa 27       	eor	r26, r26
  6e:	97 fd       	sbrc	r25, 7
  70:	a0 95       	com	r26
  72:	ba 2f       	mov	r27, r26
  74:	bc 01       	movw	r22, r24
  76:	cd 01       	movw	r24, r26
  78:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__floatsisf>
  7c:	20 e0       	ldi	r18, 0x00	; 0
  7e:	30 e0       	ldi	r19, 0x00	; 0
  80:	40 e2       	ldi	r20, 0x20	; 32
  82:	51 e4       	ldi	r21, 0x41	; 65
  84:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	30 e8       	ldi	r19, 0x80	; 128
  8c:	49 e0       	ldi	r20, 0x09	; 9
  8e:	54 e4       	ldi	r21, 0x44	; 68
  90:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <__addsf3>
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	40 e8       	ldi	r20, 0x80	; 128
  9a:	5e e3       	ldi	r21, 0x3E	; 62
  9c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
  a0:	0e 94 35 01 	call	0x26a	; 0x26a <__fixsfsi>

 int Servo_Angle =( (angle*Mpd) + min)/4;

  return Servo_Angle;

}
  a4:	cb 01       	movw	r24, r22
  a6:	08 95       	ret

000000a8 <main>:



int main(void)
{
  a8:	ef 92       	push	r14
  aa:	ff 92       	push	r15
  ac:	0f 93       	push	r16
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
   //Configure TIMER1
   TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);        //NON Inverted PWM
  b4:	8f b5       	in	r24, 0x2f	; 47
  b6:	82 6a       	ori	r24, 0xA2	; 162
  b8:	8f bd       	out	0x2f, r24	; 47
   TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
  ba:	8e b5       	in	r24, 0x2e	; 46
  bc:	8b 61       	ori	r24, 0x1B	; 27
  be:	8e bd       	out	0x2e, r24	; 46

   ICR1=4999;  //fPWM=50Hz (Period = 20ms Standard).
  c0:	87 e8       	ldi	r24, 0x87	; 135
  c2:	93 e1       	ldi	r25, 0x13	; 19
  c4:	97 bd       	out	0x27, r25	; 39
  c6:	86 bd       	out	0x26, r24	; 38

   DDRD=0x30;
  c8:	80 e3       	ldi	r24, 0x30	; 48
  ca:	81 bb       	out	0x11, r24	; 17
   PORTD=0x30;
  cc:	82 bb       	out	0x12, r24	; 18
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d2:	80 e2       	ldi	r24, 0x20	; 32
  d4:	e8 2e       	mov	r14, r24
  d6:	8e e4       	ldi	r24, 0x4E	; 78
  d8:	f8 2e       	mov	r15, r24
   int i;

   while(1)
   {
	for(i=0;i<=180;i++){
      OCR1A=degree_to_pulse(i);
  da:	00 e9       	ldi	r16, 0x90	; 144
  dc:	11 e0       	ldi	r17, 0x01	; 1
  de:	23 c0       	rjmp	.+70     	; 0x126 <main+0x7e>
  e0:	be 01       	movw	r22, r28
  e2:	88 27       	eor	r24, r24
  e4:	77 fd       	sbrc	r23, 7
  e6:	80 95       	com	r24
  e8:	98 2f       	mov	r25, r24
  ea:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__floatsisf>
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	40 e2       	ldi	r20, 0x20	; 32
  f4:	51 e4       	ldi	r21, 0x41	; 65
  f6:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	30 e8       	ldi	r19, 0x80	; 128
  fe:	49 e0       	ldi	r20, 0x09	; 9
 100:	54 e4       	ldi	r21, 0x44	; 68
 102:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <__addsf3>
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	40 e8       	ldi	r20, 0x80	; 128
 10c:	5e e3       	ldi	r21, 0x3E	; 62
 10e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
 112:	0e 94 35 01 	call	0x26a	; 0x26a <__fixsfsi>
 116:	7b bd       	out	0x2b, r23	; 43
 118:	6a bd       	out	0x2a, r22	; 42
	  OCR1B=degree_to_pulse(i);
 11a:	79 bd       	out	0x29, r23	; 41
 11c:	68 bd       	out	0x28, r22	; 40
 11e:	c7 01       	movw	r24, r14
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x78>
   PORTD=0x30;
   int i;

   while(1)
   {
	for(i=0;i<=180;i++){
 124:	21 96       	adiw	r28, 0x01	; 1
 126:	c5 3b       	cpi	r28, 0xB5	; 181
 128:	d1 05       	cpc	r29, r1
 12a:	d4 f2       	brlt	.-76     	; 0xe0 <main+0x38>
 12c:	80 e1       	ldi	r24, 0x10	; 16
 12e:	97 e2       	ldi	r25, 0x27	; 39
 130:	f8 01       	movw	r30, r16
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <main+0x8a>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 136:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 138:	d9 f7       	brne	.-10     	; 0x130 <main+0x88>
 13a:	c4 eb       	ldi	r28, 0xB4	; 180
 13c:	d0 e0       	ldi	r29, 0x00	; 0
	  OCR1B=degree_to_pulse(i);
     _delay_ms(5);
	 }
	 _delay_ms(1000);
	 for(i=180;i>=0;i--){
	 OCR1A=degree_to_pulse(i);   //0 degree
 13e:	be 01       	movw	r22, r28
 140:	88 27       	eor	r24, r24
 142:	77 fd       	sbrc	r23, 7
 144:	80 95       	com	r24
 146:	98 2f       	mov	r25, r24
 148:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__floatsisf>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e2       	ldi	r20, 0x20	; 32
 152:	51 e4       	ldi	r21, 0x41	; 65
 154:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e8       	ldi	r19, 0x80	; 128
 15c:	49 e0       	ldi	r20, 0x09	; 9
 15e:	54 e4       	ldi	r21, 0x44	; 68
 160:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <__addsf3>
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	40 e8       	ldi	r20, 0x80	; 128
 16a:	5e e3       	ldi	r21, 0x3E	; 62
 16c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__mulsf3>
 170:	0e 94 35 01 	call	0x26a	; 0x26a <__fixsfsi>
 174:	7b bd       	out	0x2b, r23	; 43
 176:	6a bd       	out	0x2a, r22	; 42
	 OCR1B=degree_to_pulse(i);
 178:	79 bd       	out	0x29, r23	; 41
 17a:	68 bd       	out	0x28, r22	; 40
 17c:	c7 01       	movw	r24, r14
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <main+0xd6>
      OCR1A=degree_to_pulse(i);
	  OCR1B=degree_to_pulse(i);
     _delay_ms(5);
	 }
	 _delay_ms(1000);
	 for(i=180;i>=0;i--){
 182:	21 97       	sbiw	r28, 0x01	; 1
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	cf 3f       	cpi	r28, 0xFF	; 255
 188:	d8 07       	cpc	r29, r24
 18a:	c9 f6       	brne	.-78     	; 0x13e <main+0x96>
 18c:	80 e1       	ldi	r24, 0x10	; 16
 18e:	97 e2       	ldi	r25, 0x27	; 39
 190:	f8 01       	movw	r30, r16
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <main+0xea>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 196:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 198:	d9 f7       	brne	.-10     	; 0x190 <main+0xe8>
 19a:	c0 e0       	ldi	r28, 0x00	; 0
 19c:	d0 e0       	ldi	r29, 0x00	; 0
 19e:	c3 cf       	rjmp	.-122    	; 0x126 <main+0x7e>

000001a0 <__subsf3>:
 1a0:	50 58       	subi	r21, 0x80	; 128

000001a2 <__addsf3>:
 1a2:	bb 27       	eor	r27, r27
 1a4:	aa 27       	eor	r26, r26
 1a6:	0e d0       	rcall	.+28     	; 0x1c4 <__addsf3x>
 1a8:	e5 c0       	rjmp	.+458    	; 0x374 <__fp_round>
 1aa:	d6 d0       	rcall	.+428    	; 0x358 <__fp_pscA>
 1ac:	30 f0       	brcs	.+12     	; 0x1ba <__addsf3+0x18>
 1ae:	db d0       	rcall	.+438    	; 0x366 <__fp_pscB>
 1b0:	20 f0       	brcs	.+8      	; 0x1ba <__addsf3+0x18>
 1b2:	31 f4       	brne	.+12     	; 0x1c0 <__addsf3+0x1e>
 1b4:	9f 3f       	cpi	r25, 0xFF	; 255
 1b6:	11 f4       	brne	.+4      	; 0x1bc <__addsf3+0x1a>
 1b8:	1e f4       	brtc	.+6      	; 0x1c0 <__addsf3+0x1e>
 1ba:	cb c0       	rjmp	.+406    	; 0x352 <__fp_nan>
 1bc:	0e f4       	brtc	.+2      	; 0x1c0 <__addsf3+0x1e>
 1be:	e0 95       	com	r30
 1c0:	e7 fb       	bst	r30, 7
 1c2:	c1 c0       	rjmp	.+386    	; 0x346 <__fp_inf>

000001c4 <__addsf3x>:
 1c4:	e9 2f       	mov	r30, r25
 1c6:	e7 d0       	rcall	.+462    	; 0x396 <__fp_split3>
 1c8:	80 f3       	brcs	.-32     	; 0x1aa <__addsf3+0x8>
 1ca:	ba 17       	cp	r27, r26
 1cc:	62 07       	cpc	r22, r18
 1ce:	73 07       	cpc	r23, r19
 1d0:	84 07       	cpc	r24, r20
 1d2:	95 07       	cpc	r25, r21
 1d4:	18 f0       	brcs	.+6      	; 0x1dc <__addsf3x+0x18>
 1d6:	71 f4       	brne	.+28     	; 0x1f4 <__addsf3x+0x30>
 1d8:	9e f5       	brtc	.+102    	; 0x240 <__addsf3x+0x7c>
 1da:	ff c0       	rjmp	.+510    	; 0x3da <__fp_zero>
 1dc:	0e f4       	brtc	.+2      	; 0x1e0 <__addsf3x+0x1c>
 1de:	e0 95       	com	r30
 1e0:	0b 2e       	mov	r0, r27
 1e2:	ba 2f       	mov	r27, r26
 1e4:	a0 2d       	mov	r26, r0
 1e6:	0b 01       	movw	r0, r22
 1e8:	b9 01       	movw	r22, r18
 1ea:	90 01       	movw	r18, r0
 1ec:	0c 01       	movw	r0, r24
 1ee:	ca 01       	movw	r24, r20
 1f0:	a0 01       	movw	r20, r0
 1f2:	11 24       	eor	r1, r1
 1f4:	ff 27       	eor	r31, r31
 1f6:	59 1b       	sub	r21, r25
 1f8:	99 f0       	breq	.+38     	; 0x220 <__addsf3x+0x5c>
 1fa:	59 3f       	cpi	r21, 0xF9	; 249
 1fc:	50 f4       	brcc	.+20     	; 0x212 <__addsf3x+0x4e>
 1fe:	50 3e       	cpi	r21, 0xE0	; 224
 200:	68 f1       	brcs	.+90     	; 0x25c <__addsf3x+0x98>
 202:	1a 16       	cp	r1, r26
 204:	f0 40       	sbci	r31, 0x00	; 0
 206:	a2 2f       	mov	r26, r18
 208:	23 2f       	mov	r18, r19
 20a:	34 2f       	mov	r19, r20
 20c:	44 27       	eor	r20, r20
 20e:	58 5f       	subi	r21, 0xF8	; 248
 210:	f3 cf       	rjmp	.-26     	; 0x1f8 <__addsf3x+0x34>
 212:	46 95       	lsr	r20
 214:	37 95       	ror	r19
 216:	27 95       	ror	r18
 218:	a7 95       	ror	r26
 21a:	f0 40       	sbci	r31, 0x00	; 0
 21c:	53 95       	inc	r21
 21e:	c9 f7       	brne	.-14     	; 0x212 <__addsf3x+0x4e>
 220:	7e f4       	brtc	.+30     	; 0x240 <__addsf3x+0x7c>
 222:	1f 16       	cp	r1, r31
 224:	ba 0b       	sbc	r27, r26
 226:	62 0b       	sbc	r22, r18
 228:	73 0b       	sbc	r23, r19
 22a:	84 0b       	sbc	r24, r20
 22c:	ba f0       	brmi	.+46     	; 0x25c <__addsf3x+0x98>
 22e:	91 50       	subi	r25, 0x01	; 1
 230:	a1 f0       	breq	.+40     	; 0x25a <__addsf3x+0x96>
 232:	ff 0f       	add	r31, r31
 234:	bb 1f       	adc	r27, r27
 236:	66 1f       	adc	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	88 1f       	adc	r24, r24
 23c:	c2 f7       	brpl	.-16     	; 0x22e <__addsf3x+0x6a>
 23e:	0e c0       	rjmp	.+28     	; 0x25c <__addsf3x+0x98>
 240:	ba 0f       	add	r27, r26
 242:	62 1f       	adc	r22, r18
 244:	73 1f       	adc	r23, r19
 246:	84 1f       	adc	r24, r20
 248:	48 f4       	brcc	.+18     	; 0x25c <__addsf3x+0x98>
 24a:	87 95       	ror	r24
 24c:	77 95       	ror	r23
 24e:	67 95       	ror	r22
 250:	b7 95       	ror	r27
 252:	f7 95       	ror	r31
 254:	9e 3f       	cpi	r25, 0xFE	; 254
 256:	08 f0       	brcs	.+2      	; 0x25a <__addsf3x+0x96>
 258:	b3 cf       	rjmp	.-154    	; 0x1c0 <__addsf3+0x1e>
 25a:	93 95       	inc	r25
 25c:	88 0f       	add	r24, r24
 25e:	08 f0       	brcs	.+2      	; 0x262 <__addsf3x+0x9e>
 260:	99 27       	eor	r25, r25
 262:	ee 0f       	add	r30, r30
 264:	97 95       	ror	r25
 266:	87 95       	ror	r24
 268:	08 95       	ret

0000026a <__fixsfsi>:
 26a:	04 d0       	rcall	.+8      	; 0x274 <__fixunssfsi>
 26c:	68 94       	set
 26e:	b1 11       	cpse	r27, r1
 270:	b5 c0       	rjmp	.+362    	; 0x3dc <__fp_szero>
 272:	08 95       	ret

00000274 <__fixunssfsi>:
 274:	98 d0       	rcall	.+304    	; 0x3a6 <__fp_splitA>
 276:	88 f0       	brcs	.+34     	; 0x29a <__fixunssfsi+0x26>
 278:	9f 57       	subi	r25, 0x7F	; 127
 27a:	90 f0       	brcs	.+36     	; 0x2a0 <__fixunssfsi+0x2c>
 27c:	b9 2f       	mov	r27, r25
 27e:	99 27       	eor	r25, r25
 280:	b7 51       	subi	r27, 0x17	; 23
 282:	a0 f0       	brcs	.+40     	; 0x2ac <__fixunssfsi+0x38>
 284:	d1 f0       	breq	.+52     	; 0x2ba <__fixunssfsi+0x46>
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	88 1f       	adc	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	1a f0       	brmi	.+6      	; 0x296 <__fixunssfsi+0x22>
 290:	ba 95       	dec	r27
 292:	c9 f7       	brne	.-14     	; 0x286 <__fixunssfsi+0x12>
 294:	12 c0       	rjmp	.+36     	; 0x2ba <__fixunssfsi+0x46>
 296:	b1 30       	cpi	r27, 0x01	; 1
 298:	81 f0       	breq	.+32     	; 0x2ba <__fixunssfsi+0x46>
 29a:	9f d0       	rcall	.+318    	; 0x3da <__fp_zero>
 29c:	b1 e0       	ldi	r27, 0x01	; 1
 29e:	08 95       	ret
 2a0:	9c c0       	rjmp	.+312    	; 0x3da <__fp_zero>
 2a2:	67 2f       	mov	r22, r23
 2a4:	78 2f       	mov	r23, r24
 2a6:	88 27       	eor	r24, r24
 2a8:	b8 5f       	subi	r27, 0xF8	; 248
 2aa:	39 f0       	breq	.+14     	; 0x2ba <__fixunssfsi+0x46>
 2ac:	b9 3f       	cpi	r27, 0xF9	; 249
 2ae:	cc f3       	brlt	.-14     	; 0x2a2 <__fixunssfsi+0x2e>
 2b0:	86 95       	lsr	r24
 2b2:	77 95       	ror	r23
 2b4:	67 95       	ror	r22
 2b6:	b3 95       	inc	r27
 2b8:	d9 f7       	brne	.-10     	; 0x2b0 <__fixunssfsi+0x3c>
 2ba:	3e f4       	brtc	.+14     	; 0x2ca <__fixunssfsi+0x56>
 2bc:	90 95       	com	r25
 2be:	80 95       	com	r24
 2c0:	70 95       	com	r23
 2c2:	61 95       	neg	r22
 2c4:	7f 4f       	sbci	r23, 0xFF	; 255
 2c6:	8f 4f       	sbci	r24, 0xFF	; 255
 2c8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ca:	08 95       	ret

000002cc <__floatunsisf>:
 2cc:	e8 94       	clt
 2ce:	09 c0       	rjmp	.+18     	; 0x2e2 <__floatsisf+0x12>

000002d0 <__floatsisf>:
 2d0:	97 fb       	bst	r25, 7
 2d2:	3e f4       	brtc	.+14     	; 0x2e2 <__floatsisf+0x12>
 2d4:	90 95       	com	r25
 2d6:	80 95       	com	r24
 2d8:	70 95       	com	r23
 2da:	61 95       	neg	r22
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	99 23       	and	r25, r25
 2e4:	a9 f0       	breq	.+42     	; 0x310 <__floatsisf+0x40>
 2e6:	f9 2f       	mov	r31, r25
 2e8:	96 e9       	ldi	r25, 0x96	; 150
 2ea:	bb 27       	eor	r27, r27
 2ec:	93 95       	inc	r25
 2ee:	f6 95       	lsr	r31
 2f0:	87 95       	ror	r24
 2f2:	77 95       	ror	r23
 2f4:	67 95       	ror	r22
 2f6:	b7 95       	ror	r27
 2f8:	f1 11       	cpse	r31, r1
 2fa:	f8 cf       	rjmp	.-16     	; 0x2ec <__floatsisf+0x1c>
 2fc:	fa f4       	brpl	.+62     	; 0x33c <__floatsisf+0x6c>
 2fe:	bb 0f       	add	r27, r27
 300:	11 f4       	brne	.+4      	; 0x306 <__floatsisf+0x36>
 302:	60 ff       	sbrs	r22, 0
 304:	1b c0       	rjmp	.+54     	; 0x33c <__floatsisf+0x6c>
 306:	6f 5f       	subi	r22, 0xFF	; 255
 308:	7f 4f       	sbci	r23, 0xFF	; 255
 30a:	8f 4f       	sbci	r24, 0xFF	; 255
 30c:	9f 4f       	sbci	r25, 0xFF	; 255
 30e:	16 c0       	rjmp	.+44     	; 0x33c <__floatsisf+0x6c>
 310:	88 23       	and	r24, r24
 312:	11 f0       	breq	.+4      	; 0x318 <__floatsisf+0x48>
 314:	96 e9       	ldi	r25, 0x96	; 150
 316:	11 c0       	rjmp	.+34     	; 0x33a <__floatsisf+0x6a>
 318:	77 23       	and	r23, r23
 31a:	21 f0       	breq	.+8      	; 0x324 <__floatsisf+0x54>
 31c:	9e e8       	ldi	r25, 0x8E	; 142
 31e:	87 2f       	mov	r24, r23
 320:	76 2f       	mov	r23, r22
 322:	05 c0       	rjmp	.+10     	; 0x32e <__floatsisf+0x5e>
 324:	66 23       	and	r22, r22
 326:	71 f0       	breq	.+28     	; 0x344 <__floatsisf+0x74>
 328:	96 e8       	ldi	r25, 0x86	; 134
 32a:	86 2f       	mov	r24, r22
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	2a f0       	brmi	.+10     	; 0x33c <__floatsisf+0x6c>
 332:	9a 95       	dec	r25
 334:	66 0f       	add	r22, r22
 336:	77 1f       	adc	r23, r23
 338:	88 1f       	adc	r24, r24
 33a:	da f7       	brpl	.-10     	; 0x332 <__floatsisf+0x62>
 33c:	88 0f       	add	r24, r24
 33e:	96 95       	lsr	r25
 340:	87 95       	ror	r24
 342:	97 f9       	bld	r25, 7
 344:	08 95       	ret

00000346 <__fp_inf>:
 346:	97 f9       	bld	r25, 7
 348:	9f 67       	ori	r25, 0x7F	; 127
 34a:	80 e8       	ldi	r24, 0x80	; 128
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	08 95       	ret

00000352 <__fp_nan>:
 352:	9f ef       	ldi	r25, 0xFF	; 255
 354:	80 ec       	ldi	r24, 0xC0	; 192
 356:	08 95       	ret

00000358 <__fp_pscA>:
 358:	00 24       	eor	r0, r0
 35a:	0a 94       	dec	r0
 35c:	16 16       	cp	r1, r22
 35e:	17 06       	cpc	r1, r23
 360:	18 06       	cpc	r1, r24
 362:	09 06       	cpc	r0, r25
 364:	08 95       	ret

00000366 <__fp_pscB>:
 366:	00 24       	eor	r0, r0
 368:	0a 94       	dec	r0
 36a:	12 16       	cp	r1, r18
 36c:	13 06       	cpc	r1, r19
 36e:	14 06       	cpc	r1, r20
 370:	05 06       	cpc	r0, r21
 372:	08 95       	ret

00000374 <__fp_round>:
 374:	09 2e       	mov	r0, r25
 376:	03 94       	inc	r0
 378:	00 0c       	add	r0, r0
 37a:	11 f4       	brne	.+4      	; 0x380 <__fp_round+0xc>
 37c:	88 23       	and	r24, r24
 37e:	52 f0       	brmi	.+20     	; 0x394 <__fp_round+0x20>
 380:	bb 0f       	add	r27, r27
 382:	40 f4       	brcc	.+16     	; 0x394 <__fp_round+0x20>
 384:	bf 2b       	or	r27, r31
 386:	11 f4       	brne	.+4      	; 0x38c <__fp_round+0x18>
 388:	60 ff       	sbrs	r22, 0
 38a:	04 c0       	rjmp	.+8      	; 0x394 <__fp_round+0x20>
 38c:	6f 5f       	subi	r22, 0xFF	; 255
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	8f 4f       	sbci	r24, 0xFF	; 255
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	08 95       	ret

00000396 <__fp_split3>:
 396:	57 fd       	sbrc	r21, 7
 398:	90 58       	subi	r25, 0x80	; 128
 39a:	44 0f       	add	r20, r20
 39c:	55 1f       	adc	r21, r21
 39e:	59 f0       	breq	.+22     	; 0x3b6 <__fp_splitA+0x10>
 3a0:	5f 3f       	cpi	r21, 0xFF	; 255
 3a2:	71 f0       	breq	.+28     	; 0x3c0 <__fp_splitA+0x1a>
 3a4:	47 95       	ror	r20

000003a6 <__fp_splitA>:
 3a6:	88 0f       	add	r24, r24
 3a8:	97 fb       	bst	r25, 7
 3aa:	99 1f       	adc	r25, r25
 3ac:	61 f0       	breq	.+24     	; 0x3c6 <__fp_splitA+0x20>
 3ae:	9f 3f       	cpi	r25, 0xFF	; 255
 3b0:	79 f0       	breq	.+30     	; 0x3d0 <__fp_splitA+0x2a>
 3b2:	87 95       	ror	r24
 3b4:	08 95       	ret
 3b6:	12 16       	cp	r1, r18
 3b8:	13 06       	cpc	r1, r19
 3ba:	14 06       	cpc	r1, r20
 3bc:	55 1f       	adc	r21, r21
 3be:	f2 cf       	rjmp	.-28     	; 0x3a4 <__fp_split3+0xe>
 3c0:	46 95       	lsr	r20
 3c2:	f1 df       	rcall	.-30     	; 0x3a6 <__fp_splitA>
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <__fp_splitA+0x30>
 3c6:	16 16       	cp	r1, r22
 3c8:	17 06       	cpc	r1, r23
 3ca:	18 06       	cpc	r1, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	f1 cf       	rjmp	.-30     	; 0x3b2 <__fp_splitA+0xc>
 3d0:	86 95       	lsr	r24
 3d2:	71 05       	cpc	r23, r1
 3d4:	61 05       	cpc	r22, r1
 3d6:	08 94       	sec
 3d8:	08 95       	ret

000003da <__fp_zero>:
 3da:	e8 94       	clt

000003dc <__fp_szero>:
 3dc:	bb 27       	eor	r27, r27
 3de:	66 27       	eor	r22, r22
 3e0:	77 27       	eor	r23, r23
 3e2:	cb 01       	movw	r24, r22
 3e4:	97 f9       	bld	r25, 7
 3e6:	08 95       	ret

000003e8 <__mulsf3>:
 3e8:	0b d0       	rcall	.+22     	; 0x400 <__mulsf3x>
 3ea:	c4 cf       	rjmp	.-120    	; 0x374 <__fp_round>
 3ec:	b5 df       	rcall	.-150    	; 0x358 <__fp_pscA>
 3ee:	28 f0       	brcs	.+10     	; 0x3fa <__mulsf3+0x12>
 3f0:	ba df       	rcall	.-140    	; 0x366 <__fp_pscB>
 3f2:	18 f0       	brcs	.+6      	; 0x3fa <__mulsf3+0x12>
 3f4:	95 23       	and	r25, r21
 3f6:	09 f0       	breq	.+2      	; 0x3fa <__mulsf3+0x12>
 3f8:	a6 cf       	rjmp	.-180    	; 0x346 <__fp_inf>
 3fa:	ab cf       	rjmp	.-170    	; 0x352 <__fp_nan>
 3fc:	11 24       	eor	r1, r1
 3fe:	ee cf       	rjmp	.-36     	; 0x3dc <__fp_szero>

00000400 <__mulsf3x>:
 400:	ca df       	rcall	.-108    	; 0x396 <__fp_split3>
 402:	a0 f3       	brcs	.-24     	; 0x3ec <__mulsf3+0x4>

00000404 <__mulsf3_pse>:
 404:	95 9f       	mul	r25, r21
 406:	d1 f3       	breq	.-12     	; 0x3fc <__mulsf3+0x14>
 408:	95 0f       	add	r25, r21
 40a:	50 e0       	ldi	r21, 0x00	; 0
 40c:	55 1f       	adc	r21, r21
 40e:	62 9f       	mul	r22, r18
 410:	f0 01       	movw	r30, r0
 412:	72 9f       	mul	r23, r18
 414:	bb 27       	eor	r27, r27
 416:	f0 0d       	add	r31, r0
 418:	b1 1d       	adc	r27, r1
 41a:	63 9f       	mul	r22, r19
 41c:	aa 27       	eor	r26, r26
 41e:	f0 0d       	add	r31, r0
 420:	b1 1d       	adc	r27, r1
 422:	aa 1f       	adc	r26, r26
 424:	64 9f       	mul	r22, r20
 426:	66 27       	eor	r22, r22
 428:	b0 0d       	add	r27, r0
 42a:	a1 1d       	adc	r26, r1
 42c:	66 1f       	adc	r22, r22
 42e:	82 9f       	mul	r24, r18
 430:	22 27       	eor	r18, r18
 432:	b0 0d       	add	r27, r0
 434:	a1 1d       	adc	r26, r1
 436:	62 1f       	adc	r22, r18
 438:	73 9f       	mul	r23, r19
 43a:	b0 0d       	add	r27, r0
 43c:	a1 1d       	adc	r26, r1
 43e:	62 1f       	adc	r22, r18
 440:	83 9f       	mul	r24, r19
 442:	a0 0d       	add	r26, r0
 444:	61 1d       	adc	r22, r1
 446:	22 1f       	adc	r18, r18
 448:	74 9f       	mul	r23, r20
 44a:	33 27       	eor	r19, r19
 44c:	a0 0d       	add	r26, r0
 44e:	61 1d       	adc	r22, r1
 450:	23 1f       	adc	r18, r19
 452:	84 9f       	mul	r24, r20
 454:	60 0d       	add	r22, r0
 456:	21 1d       	adc	r18, r1
 458:	82 2f       	mov	r24, r18
 45a:	76 2f       	mov	r23, r22
 45c:	6a 2f       	mov	r22, r26
 45e:	11 24       	eor	r1, r1
 460:	9f 57       	subi	r25, 0x7F	; 127
 462:	50 40       	sbci	r21, 0x00	; 0
 464:	8a f0       	brmi	.+34     	; 0x488 <__mulsf3_pse+0x84>
 466:	e1 f0       	breq	.+56     	; 0x4a0 <__mulsf3_pse+0x9c>
 468:	88 23       	and	r24, r24
 46a:	4a f0       	brmi	.+18     	; 0x47e <__mulsf3_pse+0x7a>
 46c:	ee 0f       	add	r30, r30
 46e:	ff 1f       	adc	r31, r31
 470:	bb 1f       	adc	r27, r27
 472:	66 1f       	adc	r22, r22
 474:	77 1f       	adc	r23, r23
 476:	88 1f       	adc	r24, r24
 478:	91 50       	subi	r25, 0x01	; 1
 47a:	50 40       	sbci	r21, 0x00	; 0
 47c:	a9 f7       	brne	.-22     	; 0x468 <__mulsf3_pse+0x64>
 47e:	9e 3f       	cpi	r25, 0xFE	; 254
 480:	51 05       	cpc	r21, r1
 482:	70 f0       	brcs	.+28     	; 0x4a0 <__mulsf3_pse+0x9c>
 484:	60 cf       	rjmp	.-320    	; 0x346 <__fp_inf>
 486:	aa cf       	rjmp	.-172    	; 0x3dc <__fp_szero>
 488:	5f 3f       	cpi	r21, 0xFF	; 255
 48a:	ec f3       	brlt	.-6      	; 0x486 <__mulsf3_pse+0x82>
 48c:	98 3e       	cpi	r25, 0xE8	; 232
 48e:	dc f3       	brlt	.-10     	; 0x486 <__mulsf3_pse+0x82>
 490:	86 95       	lsr	r24
 492:	77 95       	ror	r23
 494:	67 95       	ror	r22
 496:	b7 95       	ror	r27
 498:	f7 95       	ror	r31
 49a:	e7 95       	ror	r30
 49c:	9f 5f       	subi	r25, 0xFF	; 255
 49e:	c1 f7       	brne	.-16     	; 0x490 <__mulsf3_pse+0x8c>
 4a0:	fe 2b       	or	r31, r30
 4a2:	88 0f       	add	r24, r24
 4a4:	91 1d       	adc	r25, r1
 4a6:	96 95       	lsr	r25
 4a8:	87 95       	ror	r24
 4aa:	97 f9       	bld	r25, 7
 4ac:	08 95       	ret

000004ae <_exit>:
 4ae:	f8 94       	cli

000004b0 <__stop_program>:
 4b0:	ff cf       	rjmp	.-2      	; 0x4b0 <__stop_program>
