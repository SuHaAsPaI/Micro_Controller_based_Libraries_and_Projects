
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000146  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000019a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000067  00000000  00000000  000001ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000011c  00000000  00000000  00000221  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000007d  00000000  00000000  0000033d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000173  00000000  00000000  000003ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000080  00000000  00000000  00000530  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000096  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000048  00000000  00000000  00000646  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   8:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  10:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  14:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  18:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  1c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  20:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  24:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  28:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  30:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  34:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  38:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  3c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  40:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  44:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  48:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  4c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  50:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  54:	9f 00       	.word	0x009f	; ????
  56:	9f 00       	.word	0x009f	; ????
  58:	9f 00       	.word	0x009f	; ????
  5a:	9f 00       	.word	0x009f	; ????
  5c:	9f 00       	.word	0x009f	; ????
  5e:	9f 00       	.word	0x009f	; ????
  60:	9f 00       	.word	0x009f	; ????
  62:	9f 00       	.word	0x009f	; ????
  64:	9b 00       	.word	0x009b	; ????
  66:	9b 00       	.word	0x009b	; ????
  68:	9b 00       	.word	0x009b	; ????
  6a:	9b 00       	.word	0x009b	; ????
  6c:	9d 00       	.word	0x009d	; ????
  6e:	9f 00       	.word	0x009f	; ????
  70:	9f 00       	.word	0x009f	; ????
  72:	9f 00       	.word	0x009f	; ????
  74:	9d 00       	.word	0x009d	; ????
  76:	9b 00       	.word	0x009b	; ????
  78:	9f 00       	.word	0x009f	; ????
  7a:	9b 00       	.word	0x009b	; ????
  7c:	9d 00       	.word	0x009d	; ????
  7e:	9b 00       	.word	0x009b	; ????
  80:	9d 00       	.word	0x009d	; ????
  82:	9f 00       	.word	0x009f	; ????
  84:	9d 00       	.word	0x009d	; ????
  86:	9b 00       	.word	0x009b	; ????
  88:	9b 00       	.word	0x009b	; ????
  8a:	9b 00       	.word	0x009b	; ????
  8c:	9d 00       	.word	0x009d	; ????
  8e:	9d 00       	.word	0x009d	; ????
  90:	9d 00       	.word	0x009d	; ????
  92:	9f 00       	.word	0x009f	; ????

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf e5       	ldi	r28, 0x5F	; 95
  9a:	d8 e0       	ldi	r29, 0x08	; 8
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	10 e0       	ldi	r17, 0x00	; 0
  a2:	a0 e6       	ldi	r26, 0x60	; 96
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	e6 e4       	ldi	r30, 0x46	; 70
  a8:	f1 e0       	ldi	r31, 0x01	; 1
  aa:	02 c0       	rjmp	.+4      	; 0xb0 <.do_copy_data_start>

000000ac <.do_copy_data_loop>:
  ac:	05 90       	lpm	r0, Z+
  ae:	0d 92       	st	X+, r0

000000b0 <.do_copy_data_start>:
  b0:	a0 36       	cpi	r26, 0x60	; 96
  b2:	b1 07       	cpc	r27, r17
  b4:	d9 f7       	brne	.-10     	; 0xac <.do_copy_data_loop>
  b6:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  ba:	0c 94 a1 00 	jmp	0x142	; 0x142 <_exit>

000000be <__bad_interrupt>:
  be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c2 <left>:
void straight();
void u_turn();

void left()
{
	PORTC=0x06;
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	85 bb       	out	0x15, r24	; 21
}
  c6:	08 95       	ret

000000c8 <right>:


void right()
{
	PORTC=0x09;
  c8:	89 e0       	ldi	r24, 0x09	; 9
  ca:	85 bb       	out	0x15, r24	; 21
}
  cc:	08 95       	ret

000000ce <slight_left>:

void slight_left()
{
	PORTC=0x02;
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	85 bb       	out	0x15, r24	; 21
}
  d2:	08 95       	ret

000000d4 <slight_right>:


void slight_right()
{
	PORTC=0x08;
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	85 bb       	out	0x15, r24	; 21
}
  d8:	08 95       	ret

000000da <straight>:

void straight()
{
	PORTC=0x0A;
  da:	8a e0       	ldi	r24, 0x0A	; 10
  dc:	85 bb       	out	0x15, r24	; 21
}
  de:	08 95       	ret

000000e0 <u_turn>:

void u_turn()
{
	PORTC=0x06;
  e0:	86 e0       	ldi	r24, 0x06	; 6
  e2:	85 bb       	out	0x15, r24	; 21
}
  e4:	08 95       	ret

000000e6 <main>:


int main(void)
{

    TCCR1A=0xA1;
  e6:	81 ea       	ldi	r24, 0xA1	; 161
  e8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=0x05;
  ea:	85 e0       	ldi	r24, 0x05	; 5
  ec:	8e bd       	out	0x2e, r24	; 46
	
	
	
	OCR1A=150;				//Left Motor PWM
  ee:	86 e9       	ldi	r24, 0x96	; 150
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	9b bd       	out	0x2b, r25	; 43
  f4:	8a bd       	out	0x2a, r24	; 42
	OCR1B=150;				//Right Motor PWM
  f6:	99 bd       	out	0x29, r25	; 41
  f8:	88 bd       	out	0x28, r24	; 40
	
	DDRD=0x30;				//Declaring PD4,PD5 as output
  fa:	80 e3       	ldi	r24, 0x30	; 48
  fc:	81 bb       	out	0x11, r24	; 17
	
	
	DDRA=0X00;				//Sensor Input
  fe:	1a ba       	out	0x1a, r1	; 26
	PORTA=0X1F;
 100:	8f e1       	ldi	r24, 0x1F	; 31
 102:	8b bb       	out	0x1b, r24	; 27
	
	DDRC=0x0F;
 104:	8f e0       	ldi	r24, 0x0F	; 15
 106:	84 bb       	out	0x14, r24	; 20
void straight();
void u_turn();

void left()
{
	PORTC=0x06;
 108:	26 e0       	ldi	r18, 0x06	; 6
}


void right()
{
	PORTC=0x09;
 10a:	49 e0       	ldi	r20, 0x09	; 9
	PORTC=0x08;
}

void straight()
{
	PORTC=0x0A;
 10c:	3a e0       	ldi	r19, 0x0A	; 10
	

    while(1)
    {
	  switch(PINA & 0X1F)
 10e:	89 b3       	in	r24, 0x19	; 25
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	a0 e0       	ldi	r26, 0x00	; 0
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	8f 71       	andi	r24, 0x1F	; 31
 118:	90 70       	andi	r25, 0x00	; 0
 11a:	a0 70       	andi	r26, 0x00	; 0
 11c:	b0 70       	andi	r27, 0x00	; 0
 11e:	fc 01       	movw	r30, r24
 120:	80 32       	cpi	r24, 0x20	; 32
 122:	91 05       	cpc	r25, r1
 124:	a0 f7       	brcc	.-24     	; 0x10e <main+0x28>
 126:	e6 5d       	subi	r30, 0xD6	; 214
 128:	ff 4f       	sbci	r31, 0xFF	; 255
 12a:	ee 0f       	add	r30, r30
 12c:	ff 1f       	adc	r31, r31
 12e:	05 90       	lpm	r0, Z+
 130:	f4 91       	lpm	r31, Z+
 132:	e0 2d       	mov	r30, r0
 134:	09 94       	ijmp
 136:	35 bb       	out	0x15, r19	; 21
 138:	ea cf       	rjmp	.-44     	; 0x10e <main+0x28>
}


void right()
{
	PORTC=0x09;
 13a:	45 bb       	out	0x15, r20	; 21
 13c:	e8 cf       	rjmp	.-48     	; 0x10e <main+0x28>
void straight();
void u_turn();

void left()
{
	PORTC=0x06;
 13e:	25 bb       	out	0x15, r18	; 21
 140:	e6 cf       	rjmp	.-52     	; 0x10e <main+0x28>

00000142 <_exit>:
 142:	f8 94       	cli

00000144 <__stop_program>:
 144:	ff cf       	rjmp	.-2      	; 0x144 <__stop_program>
